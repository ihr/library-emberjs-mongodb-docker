FROM dockerfile/ubuntu

MAINTAINER {name: "Ivan Hristov", email: "hristov.iv@gmail.com"}

# Install Java.
RUN \
  echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
  echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections && \
  add-apt-repository -y ppa:webupd8team/java && \
  apt-get update && \
  apt-get install -y oracle-java8-installer

# Install MongoDB.
RUN \
  apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 && \
  echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/mongodb.list && \
  apt-get update && \
  apt-get install -y mongodb-org && \
  mkdir -p /data/db \
  mongod

# Define mountable directories.
VOLUME ["/data"]

#Create app directory
RUN \
  mkdir -p /{app.working.directory}/src/main/webapp \
  mkdir -p /{app.working.directory}/src/test/resources

# Define working directory.
#WORKDIR /{app.working.directory}

# Add the application JAR
ADD target/{app.name}-{app.version}.jar /{app.working.directory}/{app.name}-{app.version}.jar

# Add the application WEBAPP directory
ADD src/main/webapp/dist /{app.working.directory}/src/main/webapp

# Add the test resources
ADD src/test/resources/books_array.json /{app.working.directory}/src/test/resources/books_array.json

# Add the application WEBAPP directory
ADD setup.sh /{app.working.directory}/

# Just to verify that the script flags are OK
RUN \
    ls -la /app/setup.sh

#Set port for the application
ENV PORT 8080

# By default start the application
ENTRYPOINT ["/{app.working.directory}/setup.sh"]

# Expose app port
EXPOSE 8080